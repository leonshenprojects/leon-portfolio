import { createStitches } from '@stitches/react';
import {
	gray,
	mauve,
	slate,
	sage,
	olive,
	sand,
	tomato,
	red,
	crimson,
	pink,
	plum,
	purple,
	violet,
	indigo,
	blue,
	sky,
	mint,
	cyan,
	teal,
	green,
	grass,
	lime,
	yellow,
	amber,
	orange,
	brown,
	bronze,
	gold,
	grayA,
	mauveA,
	slateA,
	sageA,
	oliveA,
	sandA,
	tomatoA,
	redA,
	crimsonA,
	pinkA,
	plumA,
	purpleA,
	violetA,
	indigoA,
	blueA,
	skyA,
	mintA,
	cyanA,
	tealA,
	greenA,
	grassA,
	limeA,
	yellowA,
	amberA,
	orangeA,
	brownA,
	bronzeA,
	goldA,
	whiteA,
	blackA,
	grayDark,
	mauveDark,
	slateDark,
	sageDark,
	oliveDark,
	sandDark,
	tomatoDark,
	redDark,
	crimsonDark,
	pinkDark,
	plumDark,
	purpleDark,
	violetDark,
	indigoDark,
	blueDark,
	skyDark,
	mintDark,
	cyanDark,
	tealDark,
	greenDark,
	grassDark,
	limeDark,
	yellowDark,
	amberDark,
	orangeDark,
	brownDark,
	bronzeDark,
	goldDark,
	grayDarkA,
	mauveDarkA,
	slateDarkA,
	sageDarkA,
	oliveDarkA,
	sandDarkA,
	tomatoDarkA,
	redDarkA,
	crimsonDarkA,
	pinkDarkA,
	plumDarkA,
	purpleDarkA,
	violetDarkA,
	indigoDarkA,
	blueDarkA,
	skyDarkA,
	mintDarkA,
	cyanDarkA,
	tealDarkA,
	greenDarkA,
	grassDarkA,
	limeDarkA,
	yellowDarkA,
	amberDarkA,
	orangeDarkA,
	brownDarkA,
	bronzeDarkA,
	goldDarkA,
} from '@radix-ui/colors';
import type * as Stitches from '@stitches/react';
export type { VariantProps } from '@stitches/react';

export const {
	styled,
	css,
	theme,
	createTheme,
	getCssText,
	globalCss,
	keyframes,
	config,
	reset,
} = createStitches({
	theme: {
		colors: {
			...gray,
			...mauve,
			...slate,
			...sage,
			...olive,
			...sand,
			...tomato,
			...red,
			...crimson,
			...pink,
			...plum,
			...purple,
			...violet,
			...indigo,
			...blue,
			...sky,
			...mint,
			...cyan,
			...teal,
			...green,
			...grass,
			...lime,
			...yellow,
			...amber,
			...orange,
			...brown,
			...bronze,
			...gold,

			...grayA,
			...mauveA,
			...slateA,
			...sageA,
			...oliveA,
			...sandA,
			...tomatoA,
			...redA,
			...crimsonA,
			...pinkA,
			...plumA,
			...purpleA,
			...violetA,
			...indigoA,
			...blueA,
			...skyA,
			...mintA,
			...cyanA,
			...tealA,
			...greenA,
			...grassA,
			...limeA,
			...yellowA,
			...amberA,
			...orangeA,
			...brownA,
			...bronzeA,
			...goldA,

			...whiteA,
			...blackA,

			// Semantic colors
			hiContrast: '$slate12',
			// loContrast: '$slate1',
			loContrast: 'white',
			canvas: 'hsl(0 0% 93%)',
			panel: 'white',
			transparentPanel: 'hsl(0 0% 0% / 97%)',
			shadowLight: 'hsl(206 22% 7% / 35%)',
			shadowDark: 'hsl(206 22% 7% / 20%)',
		},
		fonts: {
			untitled: 'Untitled Sans, -apple-system, system-ui, sans-serif',
			mono: 'SÃ¶hne Mono, menlo, monospace',
		},
		space: {
			1: '0.5rem',
			2: '1rem',
			3: '1.5rem',
			4: '2rem',
			5: '2.5rem',
			6: '3.5rem',
		},
		sizes: {
			1: '0.5rem',
			2: '1rem',
			3: '1.5rem',
			4: '2rem',
			5: '2.5rem',
			6: '3.5rem',
		},
		fontSizes: {
			1: '1.2rem',
			3: '1.4rem',
			4: '1.5rem',
			6: '2rem',
			7: '2.5rem',
			8: '3rem',
		},
		radii: {
			1: '0.4rem',
			2: '0.6rem',
			3: '0.8rem',
			4: '1.2rem',
			round: '50%',
			pill: '9999px',
		},
		zIndices: {
			1: '100',
			2: '200',
			3: '300',
			4: '400',
			max: '999',
		},
	},
	media: {
		bp1: '(min-width: 481px)',
		bp2: '(min-width: 769px)',
		bp3: '(min-width: 1025px)',
		motion: '(prefers-reduced-motion)',
		hover: '(any-hover: hover)',
		dark: '(prefers-color-scheme: dark)',
		light: '(prefers-color-scheme: light)',
	},
	utils: {
		us: (value: Stitches.PropertyValue<'userSelect'>) => ({
			WebkitUserSelect: value,
			userSelect: value,
		}),

		userSelect: (value: Stitches.PropertyValue<'userSelect'>) => ({
			WebkitUserSelect: value,
			userSelect: value,
		}),

		appearance: (value: Stitches.PropertyValue<'appearance'>) => ({
			WebkitAppearance: value,
			appearance: value,
		}),
		backgroundClip: (value: Stitches.PropertyValue<'backgroundClip'>) => ({
			WebkitBackgroundClip: value,
			backgroundClip: value,
		}),
	},
});

export const globalStyles = globalCss({
	'*': {
		boxSizing: 'border-box',
	},
	html: {
		overflowX: 'hidden',
		'-webkit-font-smoothing': 'antialiased',
		textRendering: 'optimizeLegibility',
		fontSize: '62.5%',
	},
	body: {
		margin: 0,
		fontSize: '1.6rem',
		// fontFamily: '$meta',
	},
	// "@font-face": [
	//   {
	//     fontFamily: "Postoni",
	//     fontWeight: 700,
	//     fontDisplay: "fallback",
	//     src: "url(https://www.washingtonpost.com/wp-stat/assets/fonts/PostoniWide-Bold.woff2)",
	//   },
	//   {
	//     fontFamily: "Postoni",
	//     fontWeight: 300,
	//     fontDisplay: "fallback",
	//     src: "url(https://www.washingtonpost.com/wp-stat/assets/fonts/PostoniWide-Regular.woff2)",
	//   },
	//   {
	//     fontFamily: "Franklin",
	//     fontWeight: 700,
	//     fontDisplay: "fallback",
	//     src: "url(https://www.washingtonpost.com/wp-stat/assets/fonts/ITC_Franklin-Bold.woff2)",
	//   },
	//   {
	//     fontFamily: "Franklin",
	//     fontWeight: 300,
	//     fontDisplay: "fallback",
	//     src: "url(https://www.washingtonpost.com/wp-stat/assets/fonts/ITC_Franklin-Light.woff2)",
	//   },
	// ],
});

export type CSS = Stitches.CSS<typeof config>;

export const darkTheme = createTheme('dark-theme', {
	colors: {
		...grayDark,
		...mauveDark,
		...slateDark,
		...sageDark,
		...oliveDark,
		...sandDark,
		...tomatoDark,
		...redDark,
		...crimsonDark,
		...pinkDark,
		...plumDark,
		...purpleDark,
		...violetDark,
		...indigoDark,
		...blueDark,
		...skyDark,
		...mintDark,
		...cyanDark,
		...tealDark,
		...greenDark,
		...grassDark,
		...limeDark,
		...yellowDark,
		...amberDark,
		...orangeDark,
		...brownDark,
		...bronzeDark,
		...goldDark,

		...grayDarkA,
		...mauveDarkA,
		...slateDarkA,
		...sageDarkA,
		...oliveDarkA,
		...sandDarkA,
		...tomatoDarkA,
		...redDarkA,
		...crimsonDarkA,
		...pinkDarkA,
		...plumDarkA,
		...purpleDarkA,
		...violetDarkA,
		...indigoDarkA,
		...blueDarkA,
		...skyDarkA,
		...mintDarkA,
		...cyanDarkA,
		...tealDarkA,
		...greenDarkA,
		...grassDarkA,
		...limeDarkA,
		...yellowDarkA,
		...amberDarkA,
		...orangeDarkA,
		...brownDarkA,
		...bronzeDarkA,
		...goldDarkA,

		// Semantic colors
		hiContrast: '$slate12',
		loContrast: '$slate1',
		canvas: 'hsl(0 0% 15%)',
		panel: '$slate3',
		transparentPanel: 'hsl(0 100% 100% / 97%)',
		shadowLight: 'hsl(206 22% 7% / 35%)',
		shadowDark: 'hsl(206 22% 7% / 20%)',
	},
});
